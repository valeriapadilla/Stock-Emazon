plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

ext {
	springAiVersion = "1.0.0-M2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'io.github.cdimascio:dotenv-java:2.2.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.3'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'com.mysql:mysql-connector-j:8.0.31'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
	testImplementation 'org.mockito:mockito-core:5.5.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:$springAiVersion"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
